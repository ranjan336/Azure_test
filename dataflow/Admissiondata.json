{
	"name": "Admissiondata",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DelimitedText1",
						"type": "DatasetReference"
					},
					"name": "hospitaladmission"
				},
				{
					"dataset": {
						"referenceName": "ctrysrc",
						"type": "DatasetReference"
					},
					"name": "countrylkp"
				},
				{
					"dataset": {
						"referenceName": "datedim",
						"type": "DatasetReference"
					},
					"name": "Datedim"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DelimitedText2",
						"type": "DatasetReference"
					},
					"name": "weeklysink"
				},
				{
					"dataset": {
						"referenceName": "dailysink",
						"type": "DatasetReference"
					},
					"name": "dlysnk"
				}
			],
			"transformations": [
				{
					"name": "selflds"
				},
				{
					"name": "weekly"
				},
				{
					"name": "eulkp"
				},
				{
					"name": "ctryselect"
				},
				{
					"name": "yearweek"
				},
				{
					"name": "datstrtend"
				},
				{
					"name": "joinweekdtsrt"
				},
				{
					"name": "pvtweekly"
				},
				{
					"name": "pvtdly"
				},
				{
					"name": "ssrtwkly"
				},
				{
					"name": "srtdly"
				},
				{
					"name": "sltwklyfnl"
				},
				{
					"name": "sltdlyfnl"
				}
			],
			"script": "source(output(\n\t\tcountry as string,\n\t\tindicator as string,\n\t\tdate as date,\n\t\tyear_week as string,\n\t\tvalue as double,\n\t\tsource as string,\n\t\turl as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> hospitaladmission\nsource(output(\n\t\tcountry as string,\n\t\tcountry_code_2_digit as string,\n\t\tcountry_code_3_digit as string,\n\t\tcontinent as string,\n\t\tpopulation as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> countrylkp\nsource(output(\n\t\tdate_key as date,\n\t\tdate as date,\n\t\tyear as short,\n\t\tmonth as short,\n\t\tday as short,\n\t\tday_name as string,\n\t\tday_of_year as short,\n\t\tweek_of_month as short,\n\t\tweek_of_year as short,\n\t\tmonth_name as string,\n\t\tyear_month as integer,\n\t\tyear_week as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> Datedim\nhospitaladmission select(mapColumn(\n\t\tcountry,\n\t\tindicator,\n\t\treported_date = date,\n\t\treported_year_week = year_week,\n\t\tvalue,\n\t\tsource\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> selflds\nctryselect split(indicator=='Weekly new hospital admissions per 100k'||indicator=='Weekly new ICU admissions per 100k',\n\tdisjoint: false) ~> weekly@(Weekly, Daily)\nselflds, countrylkp lookup(selflds@country == countrylkp@country,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> eulkp\neulkp select(mapColumn(\n\t\tcountry = selflds@country,\n\t\tindicator,\n\t\treported_date,\n\t\treported_year_week,\n\t\tvalue,\n\t\tsource,\n\t\tcountry = countrylkp@country,\n\t\tcountry_code_2_digit,\n\t\tcountry_code_3_digit,\n\t\tpopulation\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> ctryselect\nDatedim derive(reported_year_week = toString(year) + '-W' + lpad(toString(week_of_year), 2, '0')) ~> yearweek\nyearweek aggregate(groupBy(reported_year_week),\n\tStart_date = min(date),\n\t\tEnd_date = max(date)) ~> datstrtend\nweekly@Weekly, datstrtend join(weekly@Weekly@reported_year_week == datstrtend@reported_year_week,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> joinweekdtsrt\njoinweekdtsrt pivot(groupBy(country,\n\t\tcountry_code_2_digit,\n\t\tcountry_code_3_digit,\n\t\tpopulation,\n\t\tweekly@Weekly@reported_year_week,\n\t\tStart_date,\n\t\tEnd_date,\n\t\tsource),\n\tpivotBy(indicator, ['Weekly new hospital admissions per 100k', 'Weekly new ICU admissions per 100k']),\n\tcount = sum(value),\n\tcolumnNaming: '$V_$N',\n\tlateral: false) ~> pvtweekly\nweekly@Daily pivot(groupBy(country,\n\t\tcountry_code_2_digit,\n\t\tcountry_code_3_digit,\n\t\treported_date,\n\t\tpopulation,\n\t\tsource),\n\tpivotBy(indicator, ['Daily hospital occupancy', 'Daily ICU occupancy']),\n\tCount = sum(value),\n\tcolumnNaming: '$V_$N',\n\tlateral: false) ~> pvtdly\npvtweekly sort(desc(reported_year_week, true),\n\tasc(country, true),\n\tcaseInsensitive: true) ~> ssrtwkly\npvtdly sort(desc(reported_date, true),\n\tasc(country, true),\n\tcaseInsensitive: true) ~> srtdly\nssrtwkly select(mapColumn(\n\t\tcountry,\n\t\tcountry_code_2_digit,\n\t\tcountry_code_3_digit,\n\t\tpopulation,\n\t\treported_year_week,\n\t\tsource,\n\t\t{ hospital admissions per 100k_count} = {Weekly new hospital admissions per 100k_count},\n\t\t{ ICU admissions per 100k_count} = {Weekly new ICU admissions per 100k_count}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sltwklyfnl\nsrtdly select(mapColumn(\n\t\tcountry,\n\t\tcountry_code_2_digit,\n\t\tcountry_code_3_digit,\n\t\treported_date,\n\t\tpopulation,\n\t\tsource,\n\t\t{hospital occupancy_Count} = {Daily hospital occupancy_Count},\n\t\t{ICU occupancy_Count} = {Daily ICU occupancy_Count}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sltdlyfnl\nsltwklyfnl sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> weeklysink\nsltdlyfnl sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dlysnk"
		}
	}
}